import Collection from '../../data/Collection';
import Instances from '../../data/Instances';
import Model from '../../model/Model';
import Query from '../Query';
import GlobalHook from './GlobalHook';
import GlobalHooks from './GlobalHooks';
export default class Hook {
    /**
     * Global lifecycle hooks for the query.
     */
    static hooks: GlobalHooks;
    /**
     * Hook UID counter.
     */
    static lastHookId: number;
    /**
     * The query instance.
     */
    query: Query;
    /**
     * The global hook index to be deleted.
     */
    indexToBeDeleted: number[];
    /**
     * Create a lidecycle hook instance.
     */
    constructor(query: Query);
    /**
     * Register a callback. It Returns unique ID for registered callback.
     */
    static on(on: string, callback: Function, once?: boolean): number;
    /**
     * Remove hook registration.
     */
    static off(uid: number): boolean;
    /**
     * Get the hook class.
     */
    self(): typeof Hook;
    /**
     * Get the hook for the given name.
     */
    getHook(name: string): Function | null;
    /**
     * Get the global hook.
     */
    getGlobalHook(name: string): GlobalHook[] | null;
    /**
     * Check if the given hook exist.
     */
    has(name: string): boolean;
    /**
     * Execute select hook for the given collection.
     */
    executeSelectHook(on: string, records: Collection): Collection;
    /**
     * Execute select hook against given records.
     */
    executeLocalSelectHook(on: string, records: Collection): Collection;
    /**
     * Execute the global select hook against given records.
     */
    executeGlobalSelectHook(on: string, records: Collection): Collection;
    /**
     * Execute the callback for all given records.
     */
    executeMutationHookOnRecords(on: string, records: Instances): void;
    /**
     * Execute mutation hook against given model.
     */
    executeMutationHook(on: string, model: Model): void | boolean;
    /**
     * Execute the local mutation hook.
     */
    executeLocalMutationHook(on: string, model: Model): void | boolean;
    /**
     * Execute the global mutation hook.
     */
    executeGlobalMutationHook(on: string, model: Model): void | boolean;
    /**
     * Remove global hooks which are executed and defined as once.
     */
    removeGlobalHook(on: string): void;
}
