import * as Vuex from 'vuex';
import Schemas from '../schema/Schemas';
import Model from '../model/Model';
import Entity from './Entity';
import Models from './Models';
import Modules from './Modules';
export default class Database {
    /**
     * The Vuex Store instance.
     */
    store: Vuex.Store<any>;
    /**
     * The namespace of the Vuex Store Module where the database is registered.
     */
    namespace: string;
    /**
     * The list of entities to be registered to the Vuex Store. It contains
     * models and modules with its name.
     */
    entities: Entity[];
    /**
     * The database schema definition. This schema will be used when normalizing
     * the data before persisting them to the Vuex Store.
     */
    schemas: Schemas;
    /**
     * Initialize the database before a user can start using it.
     */
    start(store: Vuex.Store<any>, namespace: string): void;
    /**
     * Register a model and a module to Database.
     */
    register(model: typeof Model, module?: Vuex.Module<any, any>): void;
    /**
     * Get the model of the given name from the entities list.
     */
    model(name: string): typeof Model;
    /**
     * Get all models from the entities list.
     */
    models(): Models;
    /**
     * Get the module of the given name from the entities list.
     */
    module(name: string): Vuex.Module<any, any>;
    /**
     * Get all modules from the entities list.
     */
    modules(): Modules;
    /**
     * Create the Vuex Module from registered entities.
     */
    registerModules(): void;
    /**
     * Create the schema definition from registered entities list and set
     * it to the property. This schema will be used by the normalizer
     * to normalize data before persisting them to the Vuex Store.
     */
    createSchema(): void;
}
